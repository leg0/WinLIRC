name: Build Release

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: windows-latest
          preset: x86
          arch: x86
        - os: windows-latest
          preset: x64
          arch: x64
    steps:
    - uses: actions/checkout@v2
      with:
          submodules: true

    - name: Restore artifacts, or setup vcpkg (do not install any package)
      uses: lukka/run-vcpkg@v10

    - name: Configure CMake ${{env.BUILD_TYPE}}
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      working-directory: ${{github.workspace}}
      run: cmake --preset ${{matrix.preset}} -B ${{runner.workspace}}/_build-${{matrix.preset}}
 
    - name: Build ${{env.BUILD_TYPE}}
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build ${{runner.workspace}}/_build-${{matrix.preset}} --config ${{env.BUILD_TYPE}}

    - name: Unit tests
      working-directory: ${{runner.workspace}}/_build-${{matrix.preset}}
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: CMake Install Artifacts
      working-directory: ${{runner.workspace}}/_build-${{matrix.preset}}
      run: cmake --install . --prefix ${{runner.workspace}}/install-${{matrix.arch}} --config ${{env.BUILD_TYPE}}

    - uses: actions/upload-artifact@v2
      with:
        name: winlirc-${{matrix.arch}}-${{env.BUILD_TYPE}}
        path: ${{runner.workspace}}/install-${{matrix.arch}}
