name: Build Release

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: windows-latest
          triplet: x86-windows
          arch: Win32
        - os: windows-latest
          triplet: x64-windows
          arch: x64
    steps:
    - uses: actions/checkout@v2
      with:
          submodules: true

    - name: Set vcpkg's response file path used as part of cache's key.
      uses: lukka/set-shell-env@master
      with:
        VCPKGRESPONSEFILE: ${{ github.workspace }}/cmake/vcpkg_${{ matrix.triplet }}.txt

    - name: run-vcpkg
      # You may pin to the exact commit or the version.
      # uses: lukka/run-vcpkg@fc243fce3040cd0f085c9704118f849ebacbe9d3
      uses: lukka/run-vcpkg@v4.1
      with:
        vcpkgArguments: '@${{ env.VCPKGRESPONSEFILE }}'
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        appendedCacheKey: ${{ hashFiles(env.VCPKGRESPONSEFILE) }}

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake ${{env.BUILD_TYPE}}
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      working-directory: ${{runner.workspace}}/build
      run: cmake -B ${{runner.workspace}}/build -S ${{runner.workspace}}/WinLIRC -A ${{matrix.arch}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{runner.workspace}}/WinLIRC/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build ${{env.BUILD_TYPE}}
      working-directory: ${{runner.workspace}}/build
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config ${{env.BUILD_TYPE}}

    - name: Unit tests
      working-directory: ${{runner.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: CMake Install Artifacts
      working-directory: ${{runner.workspace}}/build
      run: cmake --install . --prefix ${{runner.workspace}}/install --config ${{env.BUILD_TYPE}}

    - uses: actions/upload-artifact@v2
      with:
        name: winlirc-${{matrix.arch}}-${{env.BUILD_TYPE}}
        path: ${{runner.workspace}}/install
